<think> 好的，我现在需要处理用户提供的逐字稿，并将其整理成段落式逐字稿。首先，我要仔细阅读用户的要求，确保完全理解任务。用户强调不能删除、改写或浓缩任何一句原文内容，所以必须保持原话的完整性。接下来，我会逐句分析提供的逐字稿。注意到原文中有很多时间戳和口语化的表达，比如“不管是在這個CPO的”、“可能產線上面量產時程上面的一些發展或者是在一些未來技術上面的一些”等。这些句子可能需要根据上下文进行适当的分段，但必须保持原句的顺序和内容不变。

我需要识别出哪些句子属于同一主题或对话轮次，以便合理分段。例如，关于资本支出的部分，从“剛才那個第一季的資本支出”开始，到“所以我們當初在做這個虱目的時候其實有包含working capital的一個成長的這個預期在裡面”结束，这些句子应该连在一起，形成一个段落。另外，关于可擦拔式和detachable的部分，用户提到了多个技术细节，需要确保这些技术术语和解释连贯地呈现。例如，从“業界都一直在講說可擦把的FAU我想要釐清一下所謂可擦把是不是”到“assembling到PIC裡頭”，这些句子可能需要分成几个段落，但必须保持原句的顺序。同时，要注意时间戳的处理。用户提供的原文中每个句子都有时间戳，但在最终的段落式逐字稿中，用户可能希望去掉时间戳，只保留对话内容。

因此，我需要将时间戳部分删除，只保留句子本身。在处理过程中，还要注意口语化的表达和重复的部分，比如“對”、“對差的方式”等，这些都需要保留，以保持对话的真实性。此外，用户提到的“虱目”可能是笔误，应确认是否为“預算”或其他正确词汇，但根据用户要求，不能修改原文，所以保持原样。最后，检查整个段落是否流畅，确保没有遗漏任何句子，并且每个句子的位置正确。完成后，再次对照用户提供的原文，确认所有内容都已正确转换，没有删减或改写。总结来说，步骤包括：1. 删除时间戳；2. 识别并分组相关句子；3. 保持原句顺序和内容；4. 确保口语化和重复部分保留；5. 最终检查完整性和准确性。

</think> 投資先進想要提問的。不管是在這個CPO的。可能產線上面量產時程上面的一些發展或者是在一些未來技術上面的一些。想要多詢問一些的。好的那我們麥克風麻煩。謝謝。

剛才那個第一季的資本支出。支出是9000萬。可是我記得。那個去年跟期情。虱目的。好像512嘛。

對5.221。然後有講說。他的。他要。準備是第一季第二季第三季好像是各1億7。1億7 1億8的樣子。

對。現在只花了9000萬。因為他目前有一些是在我們的working capital因為我們現在的營收。也。成長。所以我們在working capital的這邊需求也變多。

所以我們當初在做這個虱目的時候其實有包含working capital的一個。成長的這個預期在裡面。今年那個5.2億是今年是一定會把它花光嗎。今年會。會花掉。對。

那另外一個就是可不可以到那個。也是剛才那一頁。下一頁好了。再下一頁。這一頁嗎。因為現在。

業界都一直在講說可擦把的FAU我想要釐清一下所謂可擦把是不是。第三個那個部分。應該是說現在的可擦把的部分是。以這一種的形式存在就是。比較像是第一個的這個方式。他是。

一個擦拔式的。的方式存在。那應該是說你要問的應該是有包含可擦拔式跟detachable的部分。可擦拔式的比較像我們以前的這個transceiver的部分。這個應用只是說我們在這個以前transceiver的時候是有很多的光源件是放在PCB板上面。那現在這個plugable的部分會走到就是。

他那些光通的這些元件會整合到就是OIC的這個晶片裡頭。然後跟COOPER這邊會去做對接所以。我們在這個plugable的這個部分呢就不會看到像以前PCB所有的光通元件是放在PCB板上面。那另外一個部分你講的應該是detachable detachable的部分就是他。他還沒有跟。我們在做這個FAU。

放到這個PIC裡頭的時候還沒有把它assembling精準的assembling進去他是用attachable的方式所以他可以去做一個。拔起來放上去的一個。如果說他有damage的時候你可以把他拔起來再放一個上去。那assembling的方式是不太一樣的assembling的方式是指說我在這個製程的過程中我們已經把FAU直接封裝在這個。PIC裡頭了。上層的設計有一點點不太一樣的地方就是我們是分兩段的。

我們這一段為了要確保就是光的精準度就是偶光的這個精準度跟使用性未來的使用性。所以在做FAU的這一塊是很精準的就是封裝到這個PIC裡頭。但是在後端的這個部分。就是我們在講這個。3的這個部分我們把3跟1的這個部分。變成是detachable的。

他是用。對差的方式也就是說我們把後面的光纖傳輸的這個部分。去做這個detachable的方式那1的這個部分呢我們是直接做這個精準的封裝就直接。assembling到PIC裡頭。這個是固定在上面。對就是固定在裡面。

那那個NVIDIA在那個GTC發表的那個CPO switch。他是。他是。是你講的那個。那個方式。發展的這個。

CPO的這個switch我。這邊可能比較方便幫。這個全球的這個最大的。leading company去做一些發言。那我這邊比較。針對就是我們上全這邊在跟這些國際型的客戶開發的時候我們能夠做什麼。

我們要提供什麼。所以這個部分在請這個投資先進這邊。多多多多。提亮。好的我們後面還有一位想要發問的。我想請教一下那個LPO跟CPO。

從cost或良率的角度上面來看的話。就是客人願意先選LPO不是直接走到CPO這個主要的關鍵是什麼就是說。我相信有year的會是一個關鍵。price cost也是一個關鍵。那在這方面。你能跟我們分享一下因為我剛剛看兩個solution都是1.6T。

但是為什麼1.6T會有兩個solution。然後。就是客人在這方面的選擇是什麼就是說我是想確認一下就是說這個LPO是不是有可能過度的時間會比我們。想像中來得久因為我看中間大概有至少一年的落差。LPO的部分因為他是plugable的一個方式所以他是。Lens會放到這個Pic裡頭中間是。

光線後面是接連接。連接頭。Connector 他的設計的複雜度會比CO的設計的複雜度會。簡單許多。CPO他是一個比較weaver level的一個設計的一個模式。LPO另外一個不同的地方是LPO是單顆的他是一顆一顆的。

CPO他在做整合的時候他是一個package的方式就是直接。封裝到整個的。Switch版或者XPU的這個整個subtrade上面跟Coop。然後他就在這邊去做對接。所以在技術難度上雖然我們看。起來是都是1.6T。

但是從發展的過程中CPO會從1.6T一直走到。3.2T到走到6.4T到甚至更高的頻寬。他會就更高的頻寬都是base on就是weaver level的一個。半導體的一個要求去做設計跟開發。也就是說從發展上面來看走到未來的AI跟high performance community。computing 如果這個的產品能夠發展。

走到這個。量產驗證跟系統驗證也能夠去評級那。對未來的整個AI的發展跟high performance。computing在做這個光對聯的時候就會有很大的一個。效能跟整個的一個成長的一個空間。那從成本因為你剛剛也問到成本的問題。

成本的部分確實是CPO的部分會比LPO因為他比較複雜所以他確實是。他的價值的value會比LPO。LPO還要來得高。一個range。因為我覺得就是說switch廠商的採用其實還是講本球率我如果一樣是1.6T就像你開高速公路。我。